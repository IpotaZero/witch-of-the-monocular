{"version":3,"file":"Game-Dbs3negb.js","sources":["../../../src/Games/Connector.ts","../../../src/Games/Game.ts"],"sourcesContent":["type Anchor = \"center\" | \"top\" | \"bottom\" | \"left\" | \"right\"\r\n\r\ninterface ConnectorOptions {\r\n    color: string\r\n    width: number\r\n    anchorA: Anchor\r\n    anchorB: Anchor\r\n    arrow: boolean\r\n}\r\n\r\ninterface Point {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport class Connector {\r\n    static #defaultOption: ConnectorOptions = {\r\n        color: \"black\",\r\n        width: 6,\r\n        anchorA: \"center\",\r\n        anchorB: \"center\",\r\n        arrow: false,\r\n    } as const\r\n\r\n    static #layer: SVGSVGElement | null = null\r\n\r\n    static #createLayer(): SVGSVGElement {\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\r\n        svg.id = \"connector-layer\"\r\n        Object.assign(svg.style, {\r\n            position: \"fixed\",\r\n            inset: \"0\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            pointerEvents: \"none\",\r\n        })\r\n\r\n        // Arrow marker (smaller, centered)\r\n        const marker = this.#createMarker(svg)\r\n\r\n        const defs = document.createElementNS(svg.namespaceURI, \"defs\")\r\n        defs.appendChild(marker)\r\n\r\n        svg.appendChild(defs)\r\n\r\n        return svg\r\n    }\r\n\r\n    static #createMarker(svg: SVGSVGElement) {\r\n        const marker = document.createElementNS(svg.namespaceURI, \"marker\")\r\n\r\n        marker.id = \"arrow-end\"\r\n        marker.setAttribute(\"orient\", \"auto\")\r\n        marker.setAttribute(\"markerWidth\", \"4\")\r\n        marker.setAttribute(\"markerHeight\", \"4\")\r\n        marker.setAttribute(\"refX\", \"2.3\")\r\n        marker.setAttribute(\"refY\", \"2\")\r\n\r\n        const path = document.createElementNS(svg.namespaceURI, \"path\")\r\n        path.setAttribute(\r\n            \"d\",\r\n            `M 4 0\r\n             Q 2 1.3, 0 2\r\n             Q 2 2.7, 4 4\r\n             Z`,\r\n        )\r\n        path.setAttribute(\"fill\", \"currentColor\")\r\n        marker.appendChild(path)\r\n\r\n        return marker\r\n    }\r\n\r\n    static ensureLayer(): SVGSVGElement {\r\n        if (!this.#layer) {\r\n            this.#layer = this.#createLayer()\r\n        }\r\n        return this.#layer\r\n    }\r\n\r\n    readonly line: SVGPolylineElement\r\n    readonly hitLine: SVGLineElement\r\n    readonly options: Required<ConnectorOptions>\r\n\r\n    readonly #A: HTMLElement\r\n    readonly #B: HTMLElement\r\n    #resizeObserverA!: ResizeObserver\r\n    #resizeObserverB!: ResizeObserver\r\n    #requestAnimationId: number | null = null\r\n\r\n    constructor(a: HTMLElement, b: HTMLElement, options: Partial<ConnectorOptions> = {}) {\r\n        this.#A = a\r\n        this.#B = b\r\n\r\n        this.options = {\r\n            ...Connector.#defaultOption,\r\n            ...options,\r\n        }\r\n\r\n        const svgLayer = Connector.ensureLayer()\r\n        // 透明な当たり判定用line\r\n        this.hitLine = this.#createHitLine(svgLayer)\r\n        svgLayer.appendChild(this.hitLine)\r\n        // 表示用line\r\n        this.line = this.#createLine(svgLayer)\r\n        svgLayer.appendChild(this.line)\r\n\r\n        this.#setupObserver()\r\n\r\n        this.update()\r\n    }\r\n\r\n    #createLine(svgLayer: SVGSVGElement) {\r\n        const line = document.createElementNS(svgLayer.namespaceURI, \"polyline\") as SVGPolylineElement\r\n\r\n        line.setAttribute(\"stroke\", \"currentColor\")\r\n        line.setAttribute(\"stroke-width\", String(this.options.width))\r\n        line.setAttribute(\"stroke-linecap\", \"round\") // 丸い端点にする\r\n\r\n        if (this.options.arrow) {\r\n            line.setAttribute(\"marker-mid\", \"url(#arrow-end)\")\r\n        }\r\n\r\n        // pointer-eventsはnoneにして、当たり判定はhitLineに任せる\r\n        line.style.pointerEvents = \"none\"\r\n\r\n        return line\r\n    }\r\n\r\n    #createHitLine(svgLayer: SVGSVGElement) {\r\n        const hitLine = document.createElementNS(svgLayer.namespaceURI, \"line\") as SVGLineElement\r\n        hitLine.setAttribute(\"stroke\", \"transparent\")\r\n        hitLine.setAttribute(\"stroke-width\", String(this.options.width * 8))\r\n        hitLine.setAttribute(\"stroke-linecap\", \"round\")\r\n        // pointer-events有効化\r\n        hitLine.style.pointerEvents = \"stroke\"\r\n        // z-indexはSVG内で後ろに来るように先にappendChildする\r\n        return hitLine\r\n    }\r\n\r\n    #setupObserver() {\r\n        const update = this.update.bind(this)\r\n\r\n        window.addEventListener(\"scroll\", update, { passive: true })\r\n        window.addEventListener(\"resize\", update, { passive: true })\r\n\r\n        this.#resizeObserverA = new ResizeObserver(update)\r\n        this.#resizeObserverB = new ResizeObserver(update)\r\n        this.#resizeObserverA.observe(this.#A)\r\n        this.#resizeObserverB.observe(this.#B)\r\n    }\r\n\r\n    #getPoint(el: HTMLElement, anchor: Anchor): Point {\r\n        // 画面上の位置\r\n        const r = el.getBoundingClientRect()\r\n\r\n        switch (anchor) {\r\n            case \"center\":\r\n                return { x: r.left + r.width / 2, y: r.top + r.height / 2 }\r\n            case \"top\":\r\n                return { x: r.left + r.width / 2, y: r.top }\r\n            case \"bottom\":\r\n                return { x: r.left + r.width / 2, y: r.bottom }\r\n            case \"left\":\r\n                return { x: r.left, y: r.top + r.height / 2 }\r\n            case \"right\":\r\n                return { x: r.right, y: r.top + r.height / 2 }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.#requestAnimationId !== null) return\r\n\r\n        this.#requestAnimationId = requestAnimationFrame(() => {\r\n            const p1 = this.#getPoint(this.#A, this.options.anchorA)\r\n            const p2 = this.#getPoint(this.#B, this.options.anchorB)\r\n\r\n            this.line.setAttribute(\r\n                \"points\",\r\n                `${p1.x},${p1.y} ${(p1.x + p2.x) / 2},${(p1.y + p2.y) / 2} ${p2.x},${p2.y}`,\r\n            )\r\n\r\n            this.hitLine.setAttribute(\"x1\", String(p1.x))\r\n            this.hitLine.setAttribute(\"y1\", String(p1.y))\r\n            this.hitLine.setAttribute(\"x2\", String(p2.x))\r\n            this.hitLine.setAttribute(\"y2\", String(p2.y))\r\n            this.#requestAnimationId = null\r\n        })\r\n    }\r\n\r\n    destroy() {\r\n        window.removeEventListener(\"scroll\", this.update)\r\n        window.removeEventListener(\"resize\", this.update)\r\n        this.#resizeObserverA.disconnect()\r\n        this.#resizeObserverB.disconnect()\r\n        this.line.remove()\r\n        this.hitLine.remove()\r\n    }\r\n}\r\n","import { Awaits } from \"../utils/Awaits\"\r\nimport { Connector } from \"./Connector\"\r\n\r\nexport class Game {\r\n    protected $defaultState: readonly number[] = []\r\n    protected $vertices: HTMLElement[] = []\r\n    protected $connectors: Map<Connector, [number, number]> = new Map()\r\n\r\n    #state: number[] = []\r\n    #vertexValueElements: HTMLElement[] = []\r\n\r\n    #abort = new AbortController()\r\n\r\n    onClear = () => {}\r\n\r\n    constructor(container: Element) {\r\n        this.$setupElement(container)\r\n        container.appendChild(Connector.ensureLayer())\r\n\r\n        // this.$connectors.forEach((_, c) => {\r\n        //     c.line.style.animationDelay = `${Math.random() * 0.5}s`\r\n        // })\r\n\r\n        // this.#vertexValueElements.forEach((v) => {\r\n        //     v.classList.add(\"hidden\")\r\n        // })\r\n\r\n        this.reset()\r\n        this.#setupValueElement(container)\r\n        this.#setupEventListener()\r\n    }\r\n\r\n    reset() {\r\n        this.#state = [...this.$defaultState]\r\n        this.#updateLineClass()\r\n        requestAnimationFrame(() => {\r\n            this.#updateVertexPosition()\r\n        })\r\n    }\r\n\r\n    destroy() {\r\n        this.$connectors.forEach((_, c) => c.destroy())\r\n        this.#vertexValueElements.forEach((v) => v.remove())\r\n        this.#abort.abort()\r\n    }\r\n\r\n    protected $setupElement(container: Element) {}\r\n\r\n    protected $createVertex(x: number, y: number, value: number) {\r\n        const vertex = document.createElement(\"span\")\r\n        vertex.classList.add(\"vertex\")\r\n\r\n        vertex.style.left = `calc(50% + ${x}dvh)`\r\n        vertex.style.top = `calc(50% + ${y}dvh)`\r\n        vertex.style.setProperty(\"--value\", value + \"\")\r\n\r\n        vertex.innerHTML = `\r\n            <input class=\"answer\" type=\"text\" readonly value=\"${value ? value : \"\"}\">\r\n        `\r\n\r\n        return vertex\r\n    }\r\n\r\n    #setupValueElement(container: Element) {\r\n        this.#vertexValueElements = this.$vertices.map((_, j) => {\r\n            const i = document.createElement(\"input\")\r\n            i.classList.add(\"value\")\r\n            i.setAttribute(\"value\", `${j ? j : \"\"}`)\r\n            i.style.setProperty(\"--value\", j + \"\")\r\n\r\n            container.appendChild(i)\r\n\r\n            return i\r\n        })\r\n\r\n        this.#updateVertexPosition()\r\n    }\r\n\r\n    #updateVertexPosition() {\r\n        this.#vertexValueElements.forEach((i, j) => {\r\n            const r = this.$vertices[this.#state.indexOf(j)].getBoundingClientRect()\r\n\r\n            i.style.left = `${r.left + r.width / 2}px`\r\n            i.style.top = `${r.top + r.height / 2}px`\r\n        })\r\n    }\r\n\r\n    #setupEventListener() {\r\n        this.$connectors.forEach(([i, j], c) => {\r\n            c.hitLine.addEventListener(\"pointerover\", () => {\r\n                if (c.hitLine.classList.contains(\"available\")) {\r\n                    c.line.classList.add(\"hovered\")\r\n                    const n = this.#state[i] === 0 ? j : i\r\n                    this.#vertexValueElements[this.#state[n]].classList.add(\"yurayura\")\r\n                }\r\n            })\r\n\r\n            c.hitLine.addEventListener(\"pointerleave\", () => {\r\n                c.line.classList.remove(\"hovered\")\r\n                this.#vertexValueElements.forEach((v) => v.classList.remove(\"yurayura\"))\r\n            })\r\n\r\n            c.hitLine.addEventListener(\"click\", () => {\r\n                this.#onClick(i, j, c.options.arrow)\r\n            })\r\n        })\r\n\r\n        window.addEventListener(\r\n            \"resize\",\r\n            () => {\r\n                this.#vertexValueElements.forEach((e) => {\r\n                    e.classList.add(\"imm\")\r\n                })\r\n\r\n                requestAnimationFrame(() => {\r\n                    this.#updateVertexPosition()\r\n                    this.#vertexValueElements.forEach((e) => {\r\n                        e.classList.remove(\"imm\")\r\n                    })\r\n                })\r\n            },\r\n            { signal: this.#abort.signal },\r\n        )\r\n    }\r\n\r\n    #updateLineClass() {\r\n        const index = this.#state.indexOf(0)\r\n\r\n        this.$connectors.forEach((arc, c) => {\r\n            let isAvailable = arc.includes(index)\r\n\r\n            if (c.options.arrow) {\r\n                isAvailable = arc[0] === index\r\n            }\r\n\r\n            c.line.classList.toggle(\"available\", isAvailable)\r\n            c.hitLine.classList.toggle(\"available\", isAvailable)\r\n\r\n            if (isAvailable) {\r\n                c.line.remove()\r\n                c.hitLine.remove()\r\n\r\n                Connector.ensureLayer().appendChild(c.line)\r\n                Connector.ensureLayer().appendChild(c.hitLine)\r\n            }\r\n        })\r\n    }\r\n\r\n    #onClick(i: number, j: number, arrow: boolean) {\r\n        const index = this.#state.indexOf(0)\r\n\r\n        if (arrow) {\r\n            if (index !== i) return\r\n        } else {\r\n            if (index !== i && index !== j) return\r\n        }\r\n\r\n        ;[this.#state[i], this.#state[j]] = [this.#state[j], this.#state[i]]\r\n\r\n        if (this.#state.join() === this.#state.map((_, i) => i).join()) {\r\n            this.onClear()\r\n        }\r\n\r\n        this.#updateLineClass()\r\n        this.#updateVertexPosition()\r\n    }\r\n}\r\n"],"names":["Connector","#defaultOption","#layer","#createLayer","svg","marker","#createMarker","defs","path","#A","#B","#resizeObserverA","#resizeObserverB","#requestAnimationId","a","b","options","svgLayer","#createHitLine","#createLine","#setupObserver","line","hitLine","update","#getPoint","el","anchor","r","p1","p2","Game","#state","#vertexValueElements","#abort","container","#setupValueElement","#setupEventListener","#updateLineClass","#updateVertexPosition","_","c","v","x","y","value","vertex","j","i","n","#onClick","e","index","arc","isAvailable","arrow"],"mappings":"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"}